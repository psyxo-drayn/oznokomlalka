document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('cuteForm');
    const submitBtn = document.getElementById('submitBtn');
    const additionalQuestions = document.getElementById('additionalQuestions');
    let isSubmitting = false; // –§–ª–∞–≥ –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –¥–≤–æ–π–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
    let questionCount = 5; // –£ –Ω–∞—Å —É–∂–µ –µ—Å—Ç—å 5 –≤–æ–ø—Ä–æ—Å–æ–≤

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
    function addQuestion() {
        const newQuestion = prompt('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –≤–æ–ø—Ä–æ—Å:');
        if (newQuestion) {
            const questionId = 'question' + questionCount;
            
            const questionDiv = document.createElement('div');
            questionDiv.className = 'form-group';
            
            const label = document.createElement('label');
            label.setAttribute('for', questionId);
            label.textContent = newQuestion;
            
            const input = document.createElement('input');
            input.type = 'text';
            input.id = questionId;
            input.name = questionId;
            input.placeholder = '–û—Ç–≤–µ—Ç...';
            
            const errorSpan = document.createElement('span');
            errorSpan.className = 'error-message';
            
            questionDiv.appendChild(label);
            questionDiv.appendChild(input);
            questionDiv.appendChild(errorSpan);
            
            additionalQuestions.appendChild(questionDiv);
            questionCount++;
            
            input.addEventListener('input', validateForm);
        }
    }
    
    window.addQuestion = addQuestion;
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º—ã
    function validateForm() {
        let isValid = true;
        const inputs = form.querySelectorAll('input, textarea');
        
        inputs.forEach(input => {
            const errorSpan = input.nextElementSibling;
            
            if (input.value.trim() === '') {
                isValid = false;
                if (errorSpan && errorSpan.classList.contains('error-message')) {
                    errorSpan.textContent = '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —ç—Ç–æ –ø–æ–ª–µ';
                    errorSpan.style.display = 'block';
                    input.style.borderColor = '#ff6b6b';
                }
            } else {
                if (errorSpan && errorSpan.classList.contains('error-message')) {
                    errorSpan.style.display = 'none';
                    input.style.borderColor = '#ffe5ec';
                }
            }
        });
        
        submitBtn.disabled = !isValid || isSubmitting;
        return isValid;
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏ –≤–≤–æ–¥–µ
    form.querySelectorAll('input, textarea').forEach(input => {
        input.addEventListener('input', validateForm);
    });
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã (–∏—Å–ø–æ–ª—å–∑—É–µ–º fetch –¥–ª—è AJAX)
    form.addEventListener('submit', function(e) {
        e.preventDefault();
        
        if (isSubmitting) return;
        
        if (validateForm()) {
            isSubmitting = true;
            submitBtn.disabled = true;
            submitBtn.innerHTML = '–û—Ç–ø—Ä–∞–≤–∫–∞... <span class="button-emoji">‚è≥</span>';
            
            fetch(form.action, {
                method: 'POST',
                body: new FormData(form)
            })
            .then(response => response.text())
            .then(data => {
                alert('–°–ø–∞—Å–∏–±–æ! –¢–≤–æ–∏ –æ—Ç–≤–µ—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã! üíñ');
                form.reset();
                submitBtn.disabled = true;
            })
            .catch(error => {
                console.error('Error:', error);
                alert('–£–ø—Å! –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑.');
            })
            .finally(() => {
                isSubmitting = false;
                submitBtn.disabled = false;
                submitBtn.innerHTML = '<span class="button-text">–ù–∞–∂–º–∏ –Ω–∞ –º–µ–Ω—è –∏ –Ω–∞–ø–∏—à–∏ –º–Ω–µ –≤ –¢–ì</span> <span class="button-emoji">üíå</span>';
            });
        } else {
            const firstInvalidInput = form.querySelector('input:invalid, textarea:invalid') || 
                                     form.querySelector('.error-message[style="display: block;"]')?.previousElementSibling;
            
            if (firstInvalidInput) {
                firstInvalidInput.scrollIntoView({ behavior: 'smooth', block: 'center' });
                firstInvalidInput.focus();
            }
        }
    });
    
    submitBtn.disabled = true;
});